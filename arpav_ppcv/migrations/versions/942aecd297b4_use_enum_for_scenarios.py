"""use enum for scenarios

Revision ID: 942aecd297b4
Revises: ca3c37b351b4
Create Date: 2025-01-16 15:56:21.385771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '942aecd297b4'
down_revision: Union[str, None] = 'ca3c37b351b4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    sa.Enum(
        'RCP26',
        'RCP45',
        'RCP85',
        name='forecastscenario'
    ).create(op.get_bind())
    op.alter_column(
        'forecastcoverageconfiguration',
        'scenarios',
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        postgresql_using='scenarios::forecastscenario[]',
        type_=sa.ARRAY(
            sa.Enum('RCP26', 'RCP45', 'RCP85', name='forecastscenario')
        ),
        existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('forecastcoverageconfiguration', 'scenarios',
               existing_type=sa.ARRAY(sa.Enum('RCP26', 'RCP45', 'RCP85', name='forecastscenario')),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=True)
    sa.Enum('RCP26', 'RCP45', 'RCP85', name='forecastscenario').drop(op.get_bind())
    # ### end Alembic commands ###
