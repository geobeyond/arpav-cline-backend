# Sample production deployment configuration file
#
# Be sure to modify all samples - these all look like <SOME-VALUE>
#
# The contents of this file is used by the deployment script to generate the
# compose file which is used for production

[main]

# path to a file that has the authentication token for the third party ARPA FVG API
arpa_fvg_auth_token_path = /opt/arpav_cline/arpa_fvg_auth_token

# full docker registry URL of the backend image
backend_image = ghcr.io/geobeyond/arpav-cline-backend/arpav-cline-backend:<TAG-NAME>

# docker compose template which is used to generate the stack - this should be a relative path, which will be taken to
# start at the `main.deployment_files_repo` setting
compose_template = docker/compose.some-env-name.template.yaml

# tag name of the `postgis/postgis` image to use for various DB containers
db_image_tag = 16-3.4

# path to the directory where the deployment files reside
deployment_root = /opt/cline

# full docker registry URL of the frontend image
frontend_image = ghcr.io/geobeyond/arpav-cline-frontend/arpav-cline-frontend:<TAG-NAME>

# comma-separated list of discord-webhook URLs which will be notified when a deployment is done
discord_notification_urls =
    <SOME-DISCORD-WEBHOOK>,
    <ANOTHER-DISCORD-WEBHOOK>

# URL of the git repository where the deployment-related files reside
deployment_files_repo = https://github.com/geobeyond/arpav-cline-backend.git

# Where should the git repository that has deployment-related files be cloned to locally
deployment_files_repo_clone_destination = /tmp/arpav-cline

# tag name of the `prefecthq/prefect` image to use
prefect_server_image_tag = 3.0.0rc17-python3.10


[db]

# name of the backend db
name = arpavcline

# password of the backend db
password = <PASSWORD>

# username of user that connects to the backend db
user = <USERNAME>


[martin]

# martin configuration source file to use - this should be a relative path, which will be taken to
# start at the `main.deployment_files_repo` setting
config_source = docker/martin/config.yaml

# tag name of the `ghcr.io/maplibre/martin` image to use
image_tag = v0.13.0


[prefect_db]

# name of the prefect db
name = prefect

# password of the prefect db
password = <PASSWORD>

# username of user that connects to the prefect db
user = <USERNAME>


[reverse_proxy]

# tag name of the `traefik` image to use
image_tag = 3.0.2

# Local path to TLS certificate  - This is not required (if, for example, you are using let's encrypt)
# /opt/arpav_ppcv_tls_certs/cert.crt
tls_cert_path = <SOMEWHERE>

# Local path to TLS certificate key  - This is not required (if, for example, you are using let's encrypt)
# /opt/arpav_ppcv_tls_certs/cert.key
tls_cert_key_path = <SOMEWHERE>

# traefik configuration source file to use - this should be a relative path, which will be taken to
# start at the `deployment_files_repo` setting
traefik_config_source = docker/traefik/some-env-config.toml

# traefik file provider source file to use - this should be a relative path, which will be taken to
# start at the `deployment_files_repo` setting - this is not required, as adding a traefik file provider may not
# be necessary (for example, when not using manually configured TLS certs)
traefik_file_provider_source = docker/traefik/some-env-file-provider-config.toml

# Local path to traefik basicauth users file
traefik_users_file_path = <SOMEWHERE>

# domain name for the main system entrypoints
main_domain_name = arpav.geobeyond.dev

# domain name for tolgee
tolgee_domain_name = tolgee.arpav.geobeyond.dev


[tolgee_app]

# initial password for the tolgee user
env_tolgee_authentication_initial_password = <PASSWORD>

# JWT secrete key for auth-related tasks
env_tolgee_authentication_jwt_secret = <SECRET>

# public URL of the tolgee service
env_tolgee_frontend_url = <SOME-URL>

# tag name of the `tolgee/tolgee` image to use
image_tag = v3.71.4


[tolgee_db]

# name of the tolgee db
name = tolgee

# password of the tolgee db
password = <PASSWORD>

# username of user that connects to the tolgee db
user = <USERNAME>


[webapp]

# password for the user that is able to access the admin section
env_admin_user_password = <PASSWORD>

# username for the user that is able to access the admin section
env_admin_user_username = <USERNAME>

# comma-separated list of allowed CORS origins
env_cors_origins =
    <SOME-ORIGIN>,
    <ANOTHER-ORIGIN>

# how many worker processes should the uvicorn server use
env_num_uvicorn_worker_processes = 1

# public URL of the system
env_public_url = <SOME-URL>

# secret key used in sessions
env_session_secret_key = <SECRET>

# base URL of the THREDDS server
env_thredds_server_base_url = <SOME-URL>

# Local path to the uvicorn log configuration
env_uvicorn_log_config_file = <SOMEWHERE>

# base URL of the vector tile server
env_vector_tile_server_base_url = <SOME-URL>
